// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlympicProject.Data;

namespace OlympicProject.Migrations
{
    [DbContext(typeof(OlympicContext))]
    partial class OlympicContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OlympicProject.Models.Account", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            UserEmail = "admin@ecu.com",
                            UserPassword = "Admin#1",
                            UserType = 0
                        },
                        new
                        {
                            UserID = 2,
                            UserEmail = "event@ecu.com",
                            UserPassword = "Event#1",
                            UserType = 1
                        });
                });

            modelBuilder.Entity("OlympicProject.Models.Competitor", b =>
                {
                    b.Property<int>("CompetitorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompetitorContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompetitorCountry")
                        .HasColumnType("int");

                    b.Property<string>("CompetitorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompetitorDoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompetitorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompetitorGender")
                        .HasColumnType("int");

                    b.Property<string>("CompetitorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompetitorPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompetitorSalutation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompetitorWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompetitorID");

                    b.ToTable("Competitor");
                });

            modelBuilder.Entity("OlympicProject.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EventStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventVenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeatureEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.Property<string>("WorldRecord")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventID");

                    b.HasIndex("GameID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("OlympicProject.Models.EventPic", b =>
                {
                    b.Property<int>("PhotoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.Property<string>("EventPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventPhotoTags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhotoID");

                    b.HasIndex("EventID");

                    b.ToTable("EventPic");
                });

            modelBuilder.Entity("OlympicProject.Models.Game", b =>
                {
                    b.Property<int>("GameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GameCode")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<string>("GameDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameDurationInHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameRulesBooklet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameID");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("OlympicProject.Models.GameCompetitor", b =>
                {
                    b.Property<int>("CompetitorID")
                        .HasColumnType("int");

                    b.Property<int>("GameID")
                        .HasColumnType("int");

                    b.HasKey("CompetitorID", "GameID");

                    b.HasIndex("GameID");

                    b.ToTable("GameCompetitor");
                });

            modelBuilder.Entity("OlympicProject.Models.Podium", b =>
                {
                    b.Property<int>("PodiumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompetitorID")
                        .HasColumnType("int");

                    b.Property<int>("CompetitorMedal")
                        .HasColumnType("int");

                    b.Property<string>("CompetitorPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.HasKey("PodiumID");

                    b.HasIndex("CompetitorID");

                    b.HasIndex("EventID");

                    b.ToTable("Podium");
                });

            modelBuilder.Entity("OlympicProject.Models.Event", b =>
                {
                    b.HasOne("OlympicProject.Models.Game", "Game")
                        .WithMany("Events")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OlympicProject.Models.EventPic", b =>
                {
                    b.HasOne("OlympicProject.Models.Event", "Event")
                        .WithMany("EventPics")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OlympicProject.Models.GameCompetitor", b =>
                {
                    b.HasOne("OlympicProject.Models.Competitor", "Competitor")
                        .WithMany("GameCompetitors")
                        .HasForeignKey("CompetitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlympicProject.Models.Game", "Game")
                        .WithMany("GameCompetitors")
                        .HasForeignKey("GameID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OlympicProject.Models.Podium", b =>
                {
                    b.HasOne("OlympicProject.Models.Competitor", "Competitor")
                        .WithMany("Podia")
                        .HasForeignKey("CompetitorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OlympicProject.Models.Event", "Event")
                        .WithMany("Podia")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
